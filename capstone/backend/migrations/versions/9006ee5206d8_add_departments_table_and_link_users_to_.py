"""Add departments table and link users to departments

Revision ID: 9006ee5206d8
Revises: 
Create Date: 2024-10-20 16:27:32.022596

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9006ee5206d8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.drop_table('tags')
    op.drop_table('roles')
    op.drop_table('project_views')
    op.drop_table('students')
    op.add_column('users', sa.Column('department_id', sa.Integer(), nullable=True))
    op.alter_column('users', 'password_hash',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
    op.create_foreign_key(None, 'users', 'departments', ['department_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.alter_column('users', 'password_hash',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
    op.drop_column('users', 'department_id')
    op.create_table('students',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='students_pkey'),
    sa.UniqueConstraint('email', name='students_email_key')
    )
    op.create_table('project_views',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('viewed_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_views_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='project_views_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_views_pkey')
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('role_name', name='roles_role_name_key')
    )
    op.create_table('tags',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tag_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='tags_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tags_pkey')
    )
    op.drop_table('departments')
    # ### end Alembic commands ###
